<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Flashcard Learning App</title>
    <link rel="stylesheet" href="styles.css">
    <style>
        /* Spinner styles */
        .spinner {
            border: 5px solid #f3f3f3;
            border-top: 5px solid #3498db;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 1s linear infinite;
            display: none;
            margin: 10px auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .upload-section {
            margin: 20px 0;
        }

        .hidden {
            display: none;
        }

        .active {
            background-color: #3498db;
            color: white;
        }

        .styled-button {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 10px 15px;
            cursor: pointer;
            margin-top: 10px;
        }

        .styled-button:hover {
            background-color: #2980b9;
        }

        .flashcard {
            border: 1px solid #3498db;
            border-radius: 5px;
            padding: 10px;
            margin: 10px 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>ðŸ“š Flashcard Generator Prototype</h1>

        <div class="option-selection">
            <button id="pdf-option" class="option-button active">Upload PDF</button>
            <button id="ppt-option" class="option-button">Upload PPT</button>
            <button id="docx-option" class="option-button">Upload DOCX</button>
            <button id="spreadsheet-option" class="option-button">Upload Spreadsheet</button>
            <button id="text-option" class="option-button">Enter Text</button>
        </div>

        <div class="flashcard-type-selection">
            <label for="flashcard-type">Select Flashcard Type:</label>
            <select id="flashcard-type">
                <option value="traditional">Traditional</option>
                <option value="cloze">Cloze Deletion</option>
            </select>
        </div>

        <!-- PDF Upload Section -->
        <div id="pdf-upload-section" class="upload-section">
            <label for="pdf-upload">Upload a PDF file to create flashcards:</label>
            <input type="file" id="pdf-upload" accept=".pdf" />
            <button id="upload-btn" class="styled-button">Generate Flashcards</button>
            <div id="pdf-spinner" class="spinner"></div>
        </div>

        <!-- PPT Upload Section -->
        <div id="ppt-upload-section" class="upload-section hidden">
            <label for="ppt-upload">Upload a PPT file to create flashcards:</label>
            <input type="file" id="ppt-upload" accept=".ppt,.pptx" />
            <button id="ppt-btn" class="styled-button">Generate Flashcards</button>
            <div id="ppt-spinner" class="spinner"></div>
        </div>

        <!-- DOCX Upload Section -->
        <div id="docx-upload-section" class="upload-section hidden">
            <label for="docx-upload">Upload a DOCX file to create flashcards:</label>
            <input type="file" id="docx-upload" accept=".docx" />
            <button id="docx-btn" class="styled-button">Generate Flashcards</button>
            <div id="docx-spinner" class="spinner"></div>
        </div>

        <!-- Spreadsheet Upload Section -->
        <div id="spreadsheet-upload-section" class="upload-section hidden">
            <label for="spreadsheet-upload">Upload a Spreadsheet to create flashcards:</label>
            <input type="file" id="spreadsheet-upload" accept=".xlsx,.csv" />
            <button id="spreadsheet-btn" class="styled-button">Generate Flashcards</button>
            <div id="spreadsheet-spinner" class="spinner"></div>
        </div>

        <!-- Text Input Section -->
        <div id="text-input-section" class="upload-section hidden">
            <label for="text-input">Enter Text to create flashcards:</label>
            <textarea id="text-input" rows="6" placeholder="Enter your text here..."></textarea>
            <button id="text-btn" class="styled-button">Generate Flashcards</button>
            <div id="text-spinner" class="spinner"></div>
        </div>

        <!-- Flashcards Display Section -->
        <div id="flashcards-container">
            <!-- Flashcards will be appended here dynamically -->
        </div>

        <footer>
            <p>Enhance your learning with flashcards! âœ¨</p>
        </footer>
    </div>

    <script>
        const options = {
            pdf: 'pdf-upload-section',
            ppt: 'ppt-upload-section',
            docx: 'docx-upload-section',
            spreadsheet: 'spreadsheet-upload-section',
            text: 'text-input-section'
        };

        Object.keys(options).forEach(option => {
            const button = document.getElementById(`${option}-option`);
            const section = document.getElementById(options[option]);

            button.addEventListener('click', () => {
                Object.keys(options).forEach(opt => {
                    document.getElementById(`${opt}-option`).classList.remove('active');
                    document.getElementById(options[opt]).classList.add('hidden');
                });
                button.classList.add('active');
                section.classList.remove('hidden');
            });
        });

        async function handleUpload(event, formData, endpoint, spinnerId) {
            const spinner = document.getElementById(spinnerId);
            spinner.style.display = 'block';

            const flashcardType = document.getElementById("flashcard-type").value;
            formData.append("type", flashcardType); // Add the flashcard type to the formData

            try {
                const response = await fetch(endpoint, {
                    method: "POST",
                    body: formData
                });

                if (response.ok) {
                    const data = await response.json();
                    displayFlashcards(data.flashcards);
                } else {
                    alert("Failed to generate flashcards.");
                }
            } catch (error) {
                console.error("Error during fetch:", error);
                alert("An error occurred while processing your request.");
            } finally {
                spinner.style.display = 'none';
            }
        }

        function setupButtonEvent(buttonId, fileInputId, method, spinnerId) {
            document.getElementById(buttonId).addEventListener("click", (event) => {
                const fileInput = document.getElementById(fileInputId);
                const file = fileInput.files[0];
                if (!file) {
                    alert("Please upload a file.");
                    return;
                }
                const formData = new FormData();
                formData.append("file", file);
                formData.append("method", method);
                handleUpload(event, formData, "https://flashcard-generator-mdhf.onrender.com/flashcard/", spinnerId);
            });
        }

        setupButtonEvent("upload-btn", "pdf-upload", "pdf", "pdf-spinner");
        setupButtonEvent("ppt-btn", "ppt-upload", "pptx", "ppt-spinner");
        setupButtonEvent("docx-btn", "docx-upload", "docx", "docx-spinner");
        setupButtonEvent("spreadsheet-btn", "spreadsheet-upload", "csv", "spreadsheet-spinner");

        document.getElementById("text-btn").addEventListener("click", (event) => {
            const textInput = document.getElementById("text-input");
            const text = textInput.value.trim();
            if (!text) {
                alert("Please enter some text.");
                return;
            }
            const formData = new FormData();
            formData.append("text", text);
            formData.append("method", "text");
            handleUpload(event, formData, "https://flashcard-generator-mdhf.onrender.com/flashcard/", "text-spinner");
        });

        function displayFlashcards(flashcards) {
            const container = document.getElementById("flashcards-container");
            container.innerHTML = "";
            flashcards.forEach(card => {
                const cardElement = document.createElement("div");
                cardElement.className = "flashcard";
                cardElement.innerHTML = `<h3>${card.question}</h3><p>${card.answer}</p>`;
                container.appendChild(cardElement);
            });
        }
    </script>
</body>
</html>
